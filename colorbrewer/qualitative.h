#pragma once
#include <stdint.h>

namespace color_palettes {
typedef uint32_t rgb888_t;
namespace colorbrewer {
// These color palettes were developed by Cynthia Brewer (http://colorbrewer2.org/).
namespace qualitative {
const rgb888_t kPastel23[3] = {0xb3e2cd,0xfdcdac,0xcbd5e8};
const rgb888_t kPastel25[5] = {0xb3e2cd,0xfdcdac,0xcbd5e8,0xf4cae4,0xe6f5c9};
const rgb888_t kPastel24[4] = {0xb3e2cd,0xfdcdac,0xcbd5e8,0xf4cae4};
const rgb888_t kPastel27[7] = {0xb3e2cd,0xfdcdac,0xcbd5e8,0xf4cae4,0xe6f5c9,0xfff2ae,0xf1e2cc};
const rgb888_t kPastel26[6] = {0xb3e2cd,0xfdcdac,0xcbd5e8,0xf4cae4,0xe6f5c9,0xfff2ae};
const rgb888_t kPastel28[8] = {0xb3e2cd,0xfdcdac,0xcbd5e8,0xf4cae4,0xe6f5c9,0xfff2ae,0xf1e2cc,0xcccccc};
const rgb888_t kPastel13[3] = {0xfbb4ae,0xb3cde3,0xccebc5};
const rgb888_t kPastel15[5] = {0xfbb4ae,0xb3cde3,0xccebc5,0xdecbe4,0xfed9a6};
const rgb888_t kPastel14[4] = {0xfbb4ae,0xb3cde3,0xccebc5,0xdecbe4};
const rgb888_t kPastel17[7] = {0xfbb4ae,0xb3cde3,0xccebc5,0xdecbe4,0xfed9a6,0xffffcc,0xe5d8bd};
const rgb888_t kPastel16[6] = {0xfbb4ae,0xb3cde3,0xccebc5,0xdecbe4,0xfed9a6,0xffffcc};
const rgb888_t kPastel19[9] = {0xfbb4ae,0xb3cde3,0xccebc5,0xdecbe4,0xfed9a6,0xffffcc,0xe5d8bd,0xfddaec,0xf2f2f2};
const rgb888_t kPastel18[8] = {0xfbb4ae,0xb3cde3,0xccebc5,0xdecbe4,0xfed9a6,0xffffcc,0xe5d8bd,0xfddaec};
const rgb888_t kDark23[3] = {0x1b9e77,0xd95f02,0x7570b3};
const rgb888_t kDark25[5] = {0x1b9e77,0xd95f02,0x7570b3,0xe7298a,0x66a61e};
const rgb888_t kDark24[4] = {0x1b9e77,0xd95f02,0x7570b3,0xe7298a};
const rgb888_t kDark27[7] = {0x1b9e77,0xd95f02,0x7570b3,0xe7298a,0x66a61e,0xe6ab02,0xa6761d};
const rgb888_t kDark26[6] = {0x1b9e77,0xd95f02,0x7570b3,0xe7298a,0x66a61e,0xe6ab02};
const rgb888_t kDark28[8] = {0x1b9e77,0xd95f02,0x7570b3,0xe7298a,0x66a61e,0xe6ab02,0xa6761d,0x666666};
const rgb888_t kAccent3[3] = {0x7fc97f,0xbeaed4,0xfdc086};
const rgb888_t kAccent5[5] = {0x7fc97f,0xbeaed4,0xfdc086,0xffff99,0x386cb0};
const rgb888_t kAccent4[4] = {0x7fc97f,0xbeaed4,0xfdc086,0xffff99};
const rgb888_t kAccent7[7] = {0x7fc97f,0xbeaed4,0xfdc086,0xffff99,0x386cb0,0xf0027f,0xbf5b17};
const rgb888_t kAccent6[6] = {0x7fc97f,0xbeaed4,0xfdc086,0xffff99,0x386cb0,0xf0027f};
const rgb888_t kAccent8[8] = {0x7fc97f,0xbeaed4,0xfdc086,0xffff99,0x386cb0,0xf0027f,0xbf5b17,0x666666};
const rgb888_t kPaired11[11] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c,0xfdbf6f,0xff7f00,0xcab2d6,0x6a3d9a,0xffff99};
const rgb888_t kPaired10[10] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c,0xfdbf6f,0xff7f00,0xcab2d6,0x6a3d9a};
const rgb888_t kPaired12[12] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c,0xfdbf6f,0xff7f00,0xcab2d6,0x6a3d9a,0xffff99,0xb15928};
const rgb888_t kPaired3[3] = {0xa6cee3,0x1f78b4,0xb2df8a};
const rgb888_t kPaired5[5] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99};
const rgb888_t kPaired4[4] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c};
const rgb888_t kPaired7[7] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c,0xfdbf6f};
const rgb888_t kPaired6[6] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c};
const rgb888_t kPaired9[9] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c,0xfdbf6f,0xff7f00,0xcab2d6};
const rgb888_t kPaired8[8] = {0xa6cee3,0x1f78b4,0xb2df8a,0x33a02c,0xfb9a99,0xe31a1c,0xfdbf6f,0xff7f00};
const rgb888_t kSet13[3] = {0xe41a1c,0x377eb8,0x4daf4a};
const rgb888_t kSet15[5] = {0xe41a1c,0x377eb8,0x4daf4a,0x984ea3,0xff7f00};
const rgb888_t kSet14[4] = {0xe41a1c,0x377eb8,0x4daf4a,0x984ea3};
const rgb888_t kSet17[7] = {0xe41a1c,0x377eb8,0x4daf4a,0x984ea3,0xff7f00,0xffff33,0xa65628};
const rgb888_t kSet16[6] = {0xe41a1c,0x377eb8,0x4daf4a,0x984ea3,0xff7f00,0xffff33};
const rgb888_t kSet19[9] = {0xe41a1c,0x377eb8,0x4daf4a,0x984ea3,0xff7f00,0xffff33,0xa65628,0xf781bf,0x999999};
const rgb888_t kSet18[8] = {0xe41a1c,0x377eb8,0x4daf4a,0x984ea3,0xff7f00,0xffff33,0xa65628,0xf781bf};
const rgb888_t kSet23[3] = {0x66c2a5,0xfc8d62,0x8da0cb};
const rgb888_t kSet25[5] = {0x66c2a5,0xfc8d62,0x8da0cb,0xe78ac3,0xa6d854};
const rgb888_t kSet24[4] = {0x66c2a5,0xfc8d62,0x8da0cb,0xe78ac3};
const rgb888_t kSet27[7] = {0x66c2a5,0xfc8d62,0x8da0cb,0xe78ac3,0xa6d854,0xffd92f,0xe5c494};
const rgb888_t kSet26[6] = {0x66c2a5,0xfc8d62,0x8da0cb,0xe78ac3,0xa6d854,0xffd92f};
const rgb888_t kSet28[8] = {0x66c2a5,0xfc8d62,0x8da0cb,0xe78ac3,0xa6d854,0xffd92f,0xe5c494,0xb3b3b3};
const rgb888_t kSet311[11] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462,0xb3de69,0xfccde5,0xd9d9d9,0xbc80bd,0xccebc5};
const rgb888_t kSet310[10] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462,0xb3de69,0xfccde5,0xd9d9d9,0xbc80bd};
const rgb888_t kSet312[12] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462,0xb3de69,0xfccde5,0xd9d9d9,0xbc80bd,0xccebc5,0xffed6f};
const rgb888_t kSet33[3] = {0x8dd3c7,0xffffb3,0xbebada};
const rgb888_t kSet35[5] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3};
const rgb888_t kSet34[4] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072};
const rgb888_t kSet37[7] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462,0xb3de69};
const rgb888_t kSet36[6] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462};
const rgb888_t kSet39[9] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462,0xb3de69,0xfccde5,0xd9d9d9};
const rgb888_t kSet38[8] = {0x8dd3c7,0xffffb3,0xbebada,0xfb8072,0x80b1d3,0xfdb462,0xb3de69,0xfccde5};
} // namespace qualitative
} // namespace colorbrewer
} // namespace color_palettes